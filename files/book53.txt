Hands-On Design Patterns with C++: Solve common C++ problems with modern design patterns and build robust applications (English Edition)
https://amazon.cn/dp/B07FNVYSN4
https://images-cn.ssl-images-amazon.com/images/I/81-TsCsEFZL._AC_UL320_ML3_.jpg
90.46
Packt
None
A comprehensive guide with extensive coverage on concepts such as OOP, functional programming, generic programming, and STL along with the latest features of C++Key FeaturesDelve into the core patterns and components of C++ in order to master application designLearn tricks, techniques, and best practices to solve common design and architectural challenges Understand the limitation imposed by C++ and how to solve them using design patternsBook DescriptionC++ is a general-purpose programming language designed with the goals of efficiency, performance, and flexibility in mind. Design patterns are commonly accepted solutions to well-recognized design problems. In essence, they are a library of reusable components, only for software architecture, and not for a concrete implementation.The focus of this book is on the design patterns that naturally lend themselves to the needs of a C++ programmer, and on the patterns that uniquely benefit from the features of C++, in particular, the generic programming. Armed with the knowledge of these patterns, you will spend less time searching for a solution to a common problem and be familiar with the solutions developed from experience, as well as their advantages and drawbacks. The other use of design patterns is as a concise and an efficient way to communicate. A pattern is a familiar and instantly recognizable solution to specific problem; through its use, sometimes with a single line of code, we can convey a considerable amount of information. The code conveys: "This is the problem we are facing, these are additional considerations that are most important in our case; hence, the following well-known solution was chosen."By the end of this book, you will have gained a comprehensive understanding of design patterns to create robust, reusable, and maintainable code.What you will learnRecognize the most common design patterns used in C++Understand how to use C++ generic programming to solve common design problemsExplore the most powerful C++ idioms, their strengths, and drawbacksRediscover how to use popular C++ idioms with generic programmingUnderstand the impact of design patterns on the program’s performanceWho this book is forThis book is for experienced C++ developers and programmers who wish to learn about software design patterns and principles and apply them to create robust, reusable, and easily maintainable apps. Table of ContentsAn introduction to Inheritance and polymorphismClass and function templatesMemory ownership Swap - from simple to subtleA Comprehensive Look at Resource Acquisition is Initialization (RAII)Type ErasureSFINAE and Overload Resolution ManagementThe Curiously Recurring Template PatternNamed Arguments and Method ChainingLocal Buffer OptimizationScopeguard Friend FactoryVirtual Constructors and FactoriesThe Template Method Pattern and the Non-Virtual IdiomSingleton: a Classic OOP PatternPolicy-based designAdaptors and DecoratorsVisitor and multiple dispatch
Fedor G. Pikus(作者)	

程序语言与软件开发	软件工程及软件方法学	电脑/网络期刊	旅游与地图	图形图像/动画/多媒体与网页开发	计算机与互联网安全与加密	
